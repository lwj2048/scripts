name: '安装 SSH 服务'
description: '安装和配置 SSH 服务，支持多平台'
inputs:
  platform:
    description: '目标平台 (ubuntu/macos/windows)'
    required: true
    default: 'ubuntu'
  public_key:
    description: 'SSH 公钥'
    required: true
  username:
    description: 'SSH 用户名'
    required: false
    default: 'root'

runs:
  using: 'composite'
  steps:
    - name: 安装 SSH 服务 (Ubuntu/Debian)
      if: ${{ inputs.platform == 'ubuntu' }}
      shell: bash
      run: |
        sudo apt update && sudo apt install -y openssh-server
        sudo systemctl start ssh
        echo "PermitRootLogin yes" | sudo tee -a /etc/ssh/sshd_config
        echo "PasswordAuthentication yes" | sudo tee -a /etc/ssh/sshd_config
        sudo systemctl restart ssh

    - name: 安装 SSH 服务 (macOS)
      if: ${{ inputs.platform == 'macos' }}
      shell: bash
      run: |
        sudo systemsetup -setremotelogin on
        sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist
        sudo launchctl kickstart -k system/com.openssh.sshd
        echo "macOS SSH 服务已启用"
        sudo sh -c 'echo "PermitRootLogin yes" >> /etc/ssh/sshd_config'
        sudo sh -c 'echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config'
        sudo launchctl stop com.openssh.sshd
        sudo launchctl start com.openssh.sshd
        echo "✅ 已允许 Root 登录"
        mkdir -p /Users/runner/.ssh
        chmod 700 /Users/runner/.ssh
        echo "{{ inputs.public_key }}" >> /Users/runner/.ssh/authorized_keys
        chmod 600 /Users/runner/.ssh/authorized_keys
        echo "✅ SSH 公钥已添加"

    - name: 安装 SSH 服务 (Windows)
      if: ${{ inputs.platform == 'windows' }}
      shell: powershell
      run: |
        Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
        Start-Service sshd
        Set-Service -Name sshd -StartupType 'Automatic'

    - name: 配置 SSH 密钥
      if: ${{ inputs.platform == 'ubuntu' }}
      shell: bash
      run: |
        if [ "${{ inputs.username }}" = "root" ]; then
          USER_HOME="/root"
        else
          USER_HOME="/home/${{ inputs.username }}"
        fi
        sudo mkdir -p $USER_HOME/.ssh
        sudo chmod 700 $USER_HOME/.ssh
        echo "${{ inputs.public_key }}" | sudo tee -a $USER_HOME/.ssh/authorized_keys
        sudo chmod 600 $USER_HOME/.ssh/authorized_keys
        sudo chown -R ${{ inputs.username }}:${{ inputs.username }} $USER_HOME/.ssh
