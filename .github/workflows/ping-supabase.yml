name: Ping Supabase DB

on:
  schedule:
    - cron: '0 2 * * *'  # 每天 UTC 2 点运行（北京时间 10 点）
  workflow_dispatch:     # 可手动触发

jobs:
  ping-database:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.9

      - name: Install psycopg2
        run: |
          python -m pip install --upgrade pip
          pip install psycopg2-binary

      # - name: Insert random ID to Supabase DB
      #   env:
      #     PG_HOST: ${{ secrets.SUPABASE_HOST }}
      #     PG_PORT: 5432
      #     PG_DBNAME: postgres
      #     PG_USER: postgres.zjjllyrxjjsqhemezuwn
      #     PG_PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
      #   run: |
      #     python -c "import psycopg2, random, os; \
      #     conn = psycopg2.connect( \
      #         host=os.getenv('PG_HOST'), \
      #         port=os.getenv('PG_PORT'), \
      #         dbname=os.getenv('PG_DBNAME'), \
      #         user=os.getenv('PG_USER'), \
      #         password=os.getenv('PG_PASSWORD') \
      #     ); \
      #     cur = conn.cursor(); \
      #     cur.execute('INSERT INTO public.\"Guarantee\" (id) VALUES (%s);', (random.randint(10000, 99999),)); \
      #     conn.commit(); \
      #     cur.close(); \
      #     conn.close(); \
      #     print('✅ Successfully inserted a random ID.')"
      
      - name: Keep Supabase project active with simple query
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
        run: |
          pip install requests

          echo "import os" > keep_alive.py
          echo "import requests" >> keep_alive.py
          echo "" >> keep_alive.py
          echo "url = os.getenv('SUPABASE_URL') + '/rest/v1/Guarantee?select=id&limit=1'" >> keep_alive.py
          echo "headers = {" >> keep_alive.py
          echo "    'apikey': os.getenv('SUPABASE_API_KEY')," >> keep_alive.py
          echo "    'Authorization': 'Bearer ' + os.getenv('SUPABASE_API_KEY')" >> keep_alive.py
          echo "}" >> keep_alive.py
          echo "response = requests.get(url, headers=headers)" >> keep_alive.py
          echo "if response.status_code == 200:" >> keep_alive.py
          echo "    print('✅ Supabase query successful.')" >> keep_alive.py
          echo "else:" >> keep_alive.py
          echo "    print(f'❌ Failed to query: {response.status_code} - {response.text}')" >> keep_alive.py

          python keep_alive.py
