name: Start SSH Server (Windows)

on:
  workflow_dispatch:  # 手动触发

jobs:
  start-ssh-server:
    runs-on: windows-latest
    steps:
      - name: 允许 SSH 远程登录
        run: |
          Get-Service -Name sshd | Start-Service
          Set-Service -Name sshd -StartupType Automatic
          echo "✅ SSH 服务器已启动"

      - name: 配置 SSH 允许 root 登录
        run: |
          echo "PermitRootLogin yes" | Out-File -Append -Encoding ASCII C:\ProgramData\ssh\sshd_config
          echo "PasswordAuthentication yes" | Out-File -Append -Encoding ASCII C:\ProgramData\ssh\sshd_config
          Restart-Service sshd
          echo "✅ 已允许 Root 登录"

      - name: 配置 SSH 公钥
        run: |
          mkdir C:\Users\runneradmin\.ssh -ErrorAction SilentlyContinue
          echo "${{ secrets.ID_RSA_PUB }}" | Out-File -Append -Encoding ASCII C:\Users\runneradmin\.ssh\authorized_keys
          echo "✅ SSH 公钥已添加"

      - name: 安装 ngrok 并暴露 SSH 端口
        run: |
          choco install ngrok -y
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          Start-Process -NoNewWindow -FilePath "ngrok.exe" -ArgumentList "tcp 22"
          echo "✅ ngrok 启动完成"

      - name: 获取 SSH 访问地址
        run: |
          Start-Sleep -Seconds 15  # 等待 ngrok 启动
          $ssh_address = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
          $ssh_address = $ssh_address.tunnels[0].public_url
          echo "🔹 你的 SSH 地址：$ssh_address"
          echo $ssh_address > ssh_address.txt

      - name: 输出 SSH 连接方式
        run: |
          $ssh_address = Get-Content ssh_address.txt
          $ssh_host = $ssh_address -replace "tcp://([^:]+):([0-9]+)",'$1'
          $ssh_port = $ssh_address -replace "tcp://([^:]+):([0-9]+)",'$2'
          echo "🔹 使用以下命令连接到服务器："
          echo "   ssh runner@$ssh_host -p $ssh_port"
          Start-Sleep -Seconds 3600  # 保持 1 小时
