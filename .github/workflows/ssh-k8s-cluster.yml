name: SSH k8s cluster

on:
  workflow_dispatch:  # 手动触发

jobs:
  start-ssh-server:
    runs-on: ubuntu-latest
    steps:
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 安装 davfs2
        run: sudo apt update && sudo apt install -y davfs2

      - name: 创建挂载目录
        run: sudo mkdir -p /mnt/share

      - name: 配置凭据文件（root 访问）
        run: |
          echo "https://app.koofr.net/dav/Koofr/ ${{ secrets.KOOFR_USERNAME }} ${{ secrets.KOOFR_PASSWORD }}" | sudo tee /etc/davfs2/secrets > /dev/null
          sudo chmod 600 /etc/davfs2/secrets

      - name: 允许 root 访问 WebDAV
        run: echo "use_locks 0" | sudo tee -a /etc/davfs2/davfs2.conf > /dev/null

      - name: 以 root 挂载 Koofr
        run: sudo mount -t davfs https://app.koofr.net/dav/Koofr/ /mnt/share

      - name: 安装 SSH 服务器
        run: |
          sudo apt update && sudo apt install -y openssh-server
          sudo systemctl start ssh
          echo "PermitRootLogin yes" | sudo tee -a /etc/ssh/sshd_config
          echo "PasswordAuthentication yes" | sudo tee -a /etc/ssh/sshd_config
          # 确保 SSH 目录和权限正确
          sudo mkdir -p /root/.ssh
          sudo chmod 700 /root/.ssh
          # 追加公钥到 authorized_keys
          echo "${{ secrets.ID_RSA_PUB }}" | sudo tee -a /root/.ssh/authorized_keys
          # 设置正确权限
          sudo chmod 600 /root/.ssh/authorized_keys
          sudo chown -R root:root /root/.ssh
      - name: 安装 ngrok 并暴露 SSH 端口
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install -y ngrok
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          nohup ngrok tcp 22 > /dev/null 2>&1 &  # 暴露 SSH 端口

      - name: 扩大空间
        run: |
          sudo rm -rf /usr/local/lib/android/sdk
          sudo rm -rf /opt/hostedtoolcache
          
      - name : login docker hub   
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        
      - name : 安装k8s
        run: |
          sudo apt update
          sudo apt install socat conntrack -y
          curl -sfL https://get-kk.kubesphere.io | sudo sh -
          yes |sudo ./kk create cluster --with-kubesphere v3.2.1

      - name : 监控localhost端口
        run: |
          sudo nohup kubectl port-forward svc/ks-console -n kubesphere-system 30880:80 > portforward.log 2>&1 &
          
      - name : install cloudflared
        run: |
          # Add cloudflare gpg key
          sudo mkdir -p --mode=0755 /usr/share/keyrings
          curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null
          # Add this repo to your apt repositories
          echo 'deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared any main' | sudo tee /etc/apt/sources.list.d/cloudflared.list
          # install cloudflared
          sudo apt-get update && sudo apt-get install cloudflared
          sudo nohup cloudflared tunnel run --token ${{ secrets.Cloudflare_tunnel_kubesphere_token }} > cloudflared.log 2>&1 &
          
      - name: 获取 SSH 访问地址
        run: |
          sleep 5
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' > ssh_address.txt
          echo "🔹 你的 SSH 地址：" $(cat ssh_address.txt)

      - name: 输出 SSH 连接方式
        run: |
          echo "🔹 使用以下命令连接到服务器："
          echo " ssh root@$(cat ssh_address.txt | sed -E 's#tcp://([^:]+):([0-9]+)#\1#') -p $(cat ssh_address.txt | sed -E 's#tcp://([^:]+):([0-9]+)#\2#') "
          sleep inf        
