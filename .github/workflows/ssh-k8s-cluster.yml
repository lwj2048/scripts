name: SSH k8s cluster

on:
  workflow_dispatch:  

jobs:
  start-k8s-cluster:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.9'

      - name: 扩大空间
        uses: ./.github/actions/expand-space
        with:
          platform: 'ubuntu'

      - name: 安装 SSH 服务
        uses: ./.github/actions/install-ssh
        with:
          platform: 'ubuntu'
          public_key: ${{ secrets.ID_RSA_PUB }}

      - name: 挂载 Koofr WebDAV (davfs2)
        uses: ./.github/actions/davfs2-mount
        with:
          platform: 'ubuntu'
          webdav_url: 'https://app.koofr.net/dav/Koofr/'
          username: ${{ secrets.KOOFR_USERNAME }}
          password: ${{ secrets.KOOFR_PASSWORD }}
          mount_point: '/mnt/share'

      - name: 安装 ngrok 并暴露端口
        uses: ./.github/actions/ngrok-ssh
        with:
          platform: 'ubuntu'
          auth_token: ${{ secrets.NGROK_AUTH_TOKEN }}
          port: '22'
          protocol: 'tcp'
          
      - name : login docker hub   
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name : 安装k8s
        run: |
          sudo apt update
          sudo apt install socat conntrack -y
          sudo bash ./shell/install/install_k8s.sh

      - name : 监控localhost端口
        run: |
          sudo nohup kubectl port-forward svc/ks-console -n kubesphere-system 30880:80 > portforward.log 2>&1 &
          
      - name: 安装 Cloudflared 隧道
        uses: ./.github/actions/cloudflared-tunnel
        with:
          platform: 'ubuntu'
          tunnel_token: ${{ secrets.CLOUDFLARE_TUNNEL_KUBESPHERE_TOKEN }}
          log_file: 'cloudflared.log'
          
      - name: 获取 SSH 访问地址
        run: |
          sleep 5
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' > ssh_address.txt
          echo "🔹 你的 SSH 地址：" $(cat ssh_address.txt)

      - name: 输出 SSH 连接方式
        run: |
          echo "🔹 使用以下命令连接到服务器："
          echo " ssh root@$(cat ssh_address.txt | sed -E 's#tcp://([^:]+):([0-9]+)#\1#') -p $(cat ssh_address.txt | sed -E 's#tcp://([^:]+):([0-9]+)#\2#') "
          sleep 5h   
