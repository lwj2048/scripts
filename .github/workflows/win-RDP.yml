name: win RDP

on:
  workflow_dispatch:

jobs:
  expose-rdp:
    runs-on: windows-latest
    steps:
      - name: 创建远程桌面用户
        shell: powershell
        run: |
          $username = "rdpuser"
          $password = "P@ssw0rd123"
          net user $username $password /add
          net localgroup "Remote Desktop Users" $username /add
          Write-Output "User $username with password $password added to Remote Desktop Users group"
      - name: 开启远程桌面服务
        run: |
          # 允许远程桌面连接
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
          # 放行防火墙的远程桌面规则
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          # 确认开启状态
          $status = (Get-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server").fDenyTSConnections
          Write-Output "远程桌面开启状态（0为开启）: $status"
          
      - name: 安装 ngrok 并暴露 RDP 端口
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile ngrok.zip
          Expand-Archive -Path ngrok.zip -DestinationPath C:\ngrok
          C:\ngrok\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          Start-Process -FilePath C:\ngrok\ngrok.exe -ArgumentList "tcp 3389" -NoNewWindow -PassThru
          Start-Sleep -Seconds 5
          $tunnels = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
          if ($tunnels.tunnels.Count -gt 0) {
              $public_url = $tunnels.tunnels[0].public_url
              Write-Output "🔹 你的 RDP 地址：$public_url"
              $public_url | Out-File rdp_address.txt
          } else {
              Write-Output "❌ 获取 ngrok 公开地址失败"
          }
          # 解析 host 和 port
          $rdp_address = Get-Content rdp_address.txt
          $rdp_host = $rdp_address -replace "tcp://([^:]+):([0-9]+)", '$1'
          $rdp_port = $rdp_address -replace "tcp://([^:]+):([0-9]+)", '$2'
          Write-Output "🔹 使用以下命令连接到服务器："
          Write-Output "   mstsc /v:${rdp_host}:${rdp_port}"

          Write-Host "✅ 检查用户是否存在..."
          net user rdpuser

          Write-Host "`n✅ 检查用户是否在 Remote Desktop Users 组..."
          net localgroup "Remote Desktop Users"

          Write-Host "`n✅ 检查远程桌面是否启用 (fDenyTSConnections)..."
          Get-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections"

          Write-Host "`n✅ 检查防火墙规则是否启用（远程桌面）..."
          Get-NetFirewallRule -DisplayGroup "Remote Desktop" | Select Name, Enabled, Action

          Write-Host "`n✅ 检查远程桌面服务（TermService）状态..."
          Get-Service -Name TermService | Select Status, StartType

          Write-Host "`n✅ 检查监听的端口..."
          netstat -an | findstr ":3389"

          Write-Host "`n✅ 检查 ngrok 是否成功建立隧道..."
          try {
            $response = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
            $response.tunnels | ForEach-Object {
              Write-Host "🔹 Tunnel: $($_.public_url) -> $($_.config.addr)"
            }
          } catch {
            Write-Host "❌ 无法连接到 ngrok 本地接口"
          }
          Start-Sleep -Seconds 21600  # 保持 6 小时
