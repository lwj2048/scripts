import requests
import json
import time
#查询完成时间大于dt的数据
dt = '2023-02-01'
timeArray = time.strptime(dt, "%Y-%m-%d")
timestamp = time.mktime(timeArray)
timestamp_point = timestamp * 1000000

url = 'https://ones.ainewera.com/project/api/project/team/JNwe8qUX/items/graphql?t=group-task-data'

headers = {
    'cookie': 'language=zh; ones-uid=5xAfRSVv; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%225xAfRSVv%22%2C%22first_id%22%3A%221855bb79db03d7-0475d9ef00e9bc8-26021151-2073600-1855bb79db13fb%22%2C%22props%22%3A%7B%22%24latest_traffic_source_type%22%3A%22%E7%9B%B4%E6%8E%A5%E6%B5%81%E9%87%8F%22%2C%22%24latest_search_keyword%22%3A%22%E6%9C%AA%E5%8F%96%E5%88%B0%E5%80%BC_%E7%9B%B4%E6%8E%A5%E6%89%93%E5%BC%80%22%2C%22%24latest_referrer%22%3A%22%22%7D%2C%22identities%22%3A%22eyIkaWRlbnRpdHlfbG9naW5faWQiOiI1eEFmUlNWdiIsIiRpZGVudGl0eV9jb29raWVfaWQiOiIxODU1YmI3OWRiMDNkNy0wNDc1ZDllZjAwZTliYzgtMjYwMjExNTEtMjA3MzYwMC0xODU1YmI3OWRiMTNmYiJ9%22%2C%22history_login_id%22%3A%7B%22name%22%3A%22%24identity_login_id%22%2C%22value%22%3A%225xAfRSVv%22%7D%2C%22%24device_id%22%3A%221855bb79db03d7-0475d9ef00e9bc8-26021151-2073600-1855bb79db13fb%22%7D; ones-lt=eas70r3YMmaJ2neky7Gyr2xzEm0U55lmVvIuvncBEcwPR0eKHGMz9LpbGtnXikXx; ct=bf95922f716da4489d2c638d92a45ce4206e1badd47a7a282913ac84fa632ee6',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36',
}

payloadData = {
  "query": "{\n  buckets(groupBy: {tasks: {}}, pagination: {limit: 50, after: \"\", preciseCount: true}) {\n    tasks(filterGroup: $filterGroup, orderBy: $orderBy, includeAncestors: {pathField: \"path\"}, orderByPath: \"path\", limit: 1000) {\n      key\n      name\n      uuid\n      serverUpdateStamp\n      path\n      subTaskCount\n      subTaskDoneCount\n      position\n      status {\n        uuid\n        name\n        category\n      }\n      deadline\n      subTasks {\n        uuid\n      }\n      issueType {\n        uuid\n        manhourStatisticMode\n      }\n      subIssueType {\n        uuid\n        manhourStatisticMode\n      }\n      project {\n        uuid\n      }\n      parent {\n        uuid\n      }\n      estimatedHours\n      remainingManhour\n      totalEstimatedHours\n      totalRemainingHours\n      issueTypeScope {\n        uuid\n      }\n      importantField {\n        bgColor\n        color\n        name\n        value\n        fieldUUID\n      }\n    }\n    key\n    pageInfo {\n      count\n      preciseCount\n      totalCount\n      startPos\n      startCursor\n      endPos\n      endCursor\n      hasNextPage\n      unstable\n    }\n  }\n  __extensions\n}\n",
  "variables": {
    "groupBy": 'null',
    "orderBy": {
      "position": "ASC",
      "createTime": "DESC"
    },
    "filterGroup": [
      {
        "assign_in": [
          "5xAfRSVv",
          "Kf2L24AA"
        ]
      }
    ],
    "bucketOrderBy": 'null',
    "search": {
      "keyword": "",
      "aliases": []
    }
  }
}
response = requests.post(url = url,headers = headers,data=json.dumps(payloadData))
for i in response.json()['data']['buckets'][0]['tasks']:
    if i['serverUpdateStamp'] > timestamp_point:
        if i['status']['name'] == 'Done':
            key = i['key']
            tasks_url = 'https://ones.ainewera.com/project/api/project/team/JNwe8qUX/items/graphql'
            tasks_paylodData = {
                "query": "\n    query TASK($key: Key) {\n      task(key: $key) {\n        \n    \n  project {\n    uuid\n    name\n    isSample\n    isArchive\n    activityChart {\n      uuid\n    }\n  }\n\n    \n  sprint {\n    description\n    name\n    namePinyin\n    uuid\n  }\n\n    \n    priority {\n      bgColor\n      color\n      defaultSelected\n      position\n      uuid\n      value\n    }\n  \n    \n  products {\n    name\n    uuid\n  }\n\n  \n    \n  \n  relatedTasks {\n    uuid\n    name\n    summary: name\n    path\n    parent {\n      uuid\n    }\n    readable\n    deadline\n    estimatedHours\n    remainingManhour\n    \n  project {\n    uuid\n    name\n    isSample\n    isArchive\n    activityChart {\n      uuid\n    }\n  }\n\n    \n    priority {\n      bgColor\n      color\n      defaultSelected\n      position\n      uuid\n      value\n    }\n  \n    \n  issueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    subIssueType\n  }\n\n    \n  subIssueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    \n  }\n\n    \n  importantField {\n    bgColor\n    color\n    fieldUUID\n    name\n    value\n  }\n  importantFieldsOptions:importantField {\n    uuid:fieldUUID\n    label: value\n    background: bgColor\n    color\n    name\n  }\n\n    \n  status {\n    uuid\n    name\n    namePinyin\n    category\n    builtIn\n    detailType\n  }\n\n    \n    assign {\n      uuid\n      name\n      avatar\n    }\n  \n    \n    \n  }\n\n  allRelatedTasks(stubTaskRelatedTasks: {}) {\n    uuid\n    name\n    \n  status {\n    uuid\n    name\n    namePinyin\n    category\n    builtIn\n    detailType\n  }\n\n  }\n  links {\n    taskUUID\n    taskLinkTypeUUID\n    linkDescType\n    createTime\n  }\n  \n  relatedTasksCount\n  allRelatedTasksCount: stubRelatedTasksCount\n\n\n  \n    \n  subTaskCount\n  subTaskDoneCount\n\n  \n    \n  sprint {\n    description\n    name\n    namePinyin\n    uuid\n  }\n\n  \n    \n  relatedWikiPages {\n    uuid\n    title\n    referenceType\n    ref_type: referenceType\n    errorMessage\n  }\n  relatedWikiPagesCount\n\n  \n\n    \n    assign {\n      key\n      uuid\n      name\n      avatar\n      email\n    }\n  \n\n  status {\n    uuid\n    name\n    namePinyin\n    category\n    builtIn\n    detailType\n  }\n\n\n    priority {\n      bgColor\n      color\n      uuid\n      value\n      position\n    }\n  \n\n    sprint {\n      key\n      uuid\n      value: uuid\n      name\n      label: name\n    }\n  \n\n    subTaskCount\n  \n\n  number\n\n\n\n    deadline\n\n    assign {\n      key\n      uuid\n      name\n      avatar\n      email\n    }\n  \n\n    priority {\n      bgColor\n      color\n      uuid\n      value\n      position\n    }\n  \n\n  status {\n    uuid\n    name\n    namePinyin\n    category\n    builtIn\n    detailType\n  }\n\n\n    sprint {\n      key\n      uuid\n      value: uuid\n      name\n      label: name\n    }\n  \n_DAJkQMV4\n_VZhP33ZP\n_9NGTU2fr\n\n    publishVersion {\n      key\n      uuid\n      value: uuid\n      name\n      label: name\n      readable\n    }\n  \n\n    _NTLwbAar {\n      bgColor\n      color\n      uuid\n      value\n      position\n    }\n  \n_CwxNVBgo\n_KJeTT6h2\n\n    subTaskCount\n  \n\n    \n    project {\n      key\n      uuid\n      value: uuid\n      name\n      label: name\n    }\n  \n\n    \n  issueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    subIssueType\n  }\n\n    \n  subIssueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    \n  }\n\n  \n\n    \n  issueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    subIssueType\n  }\n\n    \n  subIssueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    \n  }\n\n  \n\n    owner {\n      key\n      uuid\n      name\n      avatar\n      email\n    }\n  \ncreateTime\nserverUpdateStamp\n\n    subTaskCount\n  \n\n\n  \n  subTasks {\n    uuid\n    name\n    summary: name\n    path\n    parent {\n      uuid\n    }\n    readable\n    deadline\n    estimatedHours\n    remainingManhour\n    \n  project {\n    uuid\n    name\n    isSample\n    isArchive\n    activityChart {\n      uuid\n    }\n  }\n\n    \n    priority {\n      bgColor\n      color\n      defaultSelected\n      position\n      uuid\n      value\n    }\n  \n    \n  issueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    subIssueType\n  }\n\n    \n  subIssueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    \n  }\n\n    \n  importantField {\n    bgColor\n    color\n    fieldUUID\n    name\n    value\n  }\n  importantFieldsOptions:importantField {\n    uuid:fieldUUID\n    label: value\n    background: bgColor\n    color\n    name\n  }\n\n    \n  status {\n    uuid\n    name\n    namePinyin\n    category\n    builtIn\n    detailType\n  }\n\n    \n    assign {\n      uuid\n      name\n      avatar\n    }\n  \n    \n      position\n      canDelete(attachPermission:{\n        permissions:[\"delete_tasks\"],\n      })\n      canEdit(attachPermission:{\n        permissions:[\"update_tasks\"],\n      })\n    \n    \n  }\n\n  \n  subTaskCount\n  subTaskDoneCount\n\n  subTaskDoneCount\n\n\n  subTaskCount\n  subTaskDoneCount\n\n\n  \n  relatedTasks {\n    uuid\n    name\n    summary: name\n    path\n    parent {\n      uuid\n    }\n    readable\n    deadline\n    estimatedHours\n    remainingManhour\n    \n  project {\n    uuid\n    name\n    isSample\n    isArchive\n    activityChart {\n      uuid\n    }\n  }\n\n    \n    priority {\n      bgColor\n      color\n      defaultSelected\n      position\n      uuid\n      value\n    }\n  \n    \n  issueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    subIssueType\n  }\n\n    \n  subIssueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    \n  }\n\n    \n  importantField {\n    bgColor\n    color\n    fieldUUID\n    name\n    value\n  }\n  importantFieldsOptions:importantField {\n    uuid:fieldUUID\n    label: value\n    background: bgColor\n    color\n    name\n  }\n\n    \n  status {\n    uuid\n    name\n    namePinyin\n    category\n    builtIn\n    detailType\n  }\n\n    \n    assign {\n      uuid\n      name\n      avatar\n    }\n  \n    \n    \n  }\n\n  allRelatedTasks(stubTaskRelatedTasks: {}) {\n    uuid\n    name\n    \n  status {\n    uuid\n    name\n    namePinyin\n    category\n    builtIn\n    detailType\n  }\n\n  }\n  links {\n    taskUUID\n    taskLinkTypeUUID\n    linkDescType\n    createTime\n  }\n  \n  relatedTasksCount\n  allRelatedTasksCount: stubRelatedTasksCount\n\n\n\n    relatedActivities {\n      uuid\n      name\n      projectUUID\n      project_uuid: projectUUID\n      relatedChild\n      related_child_uuid: relatedChild\n    }\n    relatedActivitiesCount\n  \n\n    \n  relatedTasksCount\n  allRelatedTasksCount: stubRelatedTasksCount\n\n    relatedActivitiesCount\n  \n\n\n  subTaskCount\n  subTaskDoneCount\n\n\n    \n  relatedTasksCount\n  allRelatedTasksCount: stubRelatedTasksCount\n\n    relatedActivitiesCount\n  \nrelatedWikiPagesCount\nattachmentCount\n\n\n\n    key\n    uuid\n    name\n    summary: name\n    description\n    descriptionText\n    desc_rich: description\n    path\n    parent {\n      uuid\n      number\n      issueType {\n        uuid\n      }\n      subIssueType {\n        uuid\n      }\n      canView(attachPermission:{\n        permissions:[\"view_tasks\"],\n      })\n      parent {\n        uuid\n        number\n        issueType {\n          uuid\n        }\n        subIssueType {\n          uuid\n        }\n        canView(attachPermission:{\n          permissions:[\"view_tasks\"],\n        })\n        parent {\n          uuid\n          number\n          issueType {\n            uuid\n          }\n          subIssueType {\n            uuid\n          }\n          canView(attachPermission:{\n            permissions:[\"view_tasks\"],\n          })\n          parent {\n            uuid\n            number\n            issueType {\n              uuid\n            }\n            subIssueType {\n              uuid\n            }\n            canView(attachPermission:{\n              permissions:[\"view_tasks\"],\n            })\n            parent {\n              uuid\n              number\n              issueType {\n                uuid\n              }\n              subIssueType {\n                uuid\n              }\n              canView(attachPermission:{\n                permissions:[\"view_tasks\"],\n              })\n              parent {\n                uuid\n                number\n                issueType {\n                  uuid\n                }\n                subIssueType {\n                  uuid\n                }\n                canView(attachPermission:{\n                  permissions:[\"view_tasks\"],\n                })\n                parent {\n                  uuid\n                  number\n                  issueType {\n                    uuid\n                  }\n                  subIssueType {\n                    uuid\n                  }\n                  canView(attachPermission:{\n                    permissions:[\"view_tasks\"],\n                  })\n                  parent {\n                    uuid\n                    number\n                    issueType {\n                      uuid\n                    }\n                    subIssueType {\n                      uuid\n                    }\n                    canView(attachPermission:{\n                      permissions:[\"view_tasks\"],\n                    })\n                    parent {\n                      uuid\n                      number\n                      issueType {\n                        uuid\n                      }\n                      subIssueType {\n                        uuid\n                      }\n                      canView(attachPermission:{\n                        permissions:[\"view_tasks\"],\n                      })\n                      parent {\n                        uuid\n                        number\n                        issueType {\n                          uuid\n                        }\n                        subIssueType {\n                          uuid\n                        }\n                        canView(attachPermission:{\n                          permissions:[\"view_tasks\"],\n                        })\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    \n  importantField {\n    bgColor\n    color\n    fieldUUID\n    name\n    value\n  }\n  importantFieldsOptions:importantField {\n    uuid:fieldUUID\n    label: value\n    background: bgColor\n    color\n    name\n  }\n\n    \n  issueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    subIssueType\n  }\n\n    \n  subIssueType {\n    key\n    uuid\n    value: uuid\n    name\n    label: name\n    builtIn\n    detailType\n    namePinyin\n    icon\n    manhourStatisticMode\n    \n  }\n\n    \n  status {\n    uuid\n    name\n    namePinyin\n    category\n    builtIn\n    detailType\n  }\n\n    \n  project {\n    uuid\n    name\n    isSample\n    isArchive\n    activityChart {\n      uuid\n    }\n  }\n\n    \n    owner {\n      key\n      uuid\n      name\n      avatar\n      email\n    }\n  \n\n\n    assign {\n      key\n      uuid\n      name\n      avatar\n      email\n    }\n  \n\n\n    watchers {\n      key\n      uuid\n      name\n      avatar\n      email\n    }\n  \n\n\n    solver {\n      key\n      uuid\n      name\n      avatar\n      email\n    }\n  \n\n\n  \n        issueType {\n          uuid\n        }\n        subIssueType {\n          uuid\n        }\n        project {\n          uuid\n        }\n        issueTypeScope {\n          uuid\n        }\n      }\n    }\n  ",
                "variables": {
                    "key": key
                }
            }
            time.sleep(3)
            tasks_response = requests.post(url=tasks_url, headers=headers, data=json.dumps(tasks_paylodData))
            info = tasks_response.json()['data']['task']
            title = info['name']
            createTime = time.localtime(int(info['createTime']/1000000))
            createTime = time.strftime('%Y-%m-%d %H:%M:%S', createTime)
            serverUpdateStamp = time.localtime(int(info['serverUpdateStamp']/1000000))
            serverUpdateStamp = time.strftime('%Y-%m-%d %H:%M:%S', serverUpdateStamp)
            to_user = info['assign']['name']
            from_user = info['owner']['name']
            label = info['_DAJkQMV4']
            print(title,createTime,serverUpdateStamp,to_user,from_user,label)
